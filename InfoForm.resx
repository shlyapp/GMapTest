<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>