<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>